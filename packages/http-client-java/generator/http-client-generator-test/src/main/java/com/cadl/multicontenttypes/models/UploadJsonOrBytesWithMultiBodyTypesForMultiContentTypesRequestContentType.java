// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.cadl.multicontenttypes.models;

/**
 * Defines values for UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType.
 */
public enum UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType {
    /**
     * Enum value application/json.
     */
    APPLICATION_JSON("application/json"),

    /**
     * Enum value application/octet-stream.
     */
    APPLICATION_OCTET_STREAM("application/octet-stream"),

    /**
     * Enum value image/jpeg.
     */
    IMAGE_JPEG("image/jpeg"),

    /**
     * Enum value image/png.
     */
    IMAGE_PNG("image/png");

    /**
     * The actual serialized value for a UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType
     * instance.
     */
    private final String value;

    UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType
     * instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType object, or null if
     * unable to parse.
     */
    public static UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType fromString(String value) {
        if (value == null) {
            return null;
        }
        UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType[] items
            = UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType.values();
        for (UploadJsonOrBytesWithMultiBodyTypesForMultiContentTypesRequestContentType item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return this.value;
    }
}
